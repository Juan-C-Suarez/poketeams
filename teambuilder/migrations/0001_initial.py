# Generated by Django 3.0.8 on 2020-07-27 22:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('favorite_pokemon', models.IntegerField(validators=[django.core.validators.MaxValueValidator(892), django.core.validators.MinValueValidator(1)])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('private', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=50)),
                ('strategy', models.CharField(max_length=1000)),
                ('pkmn1_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn1_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn2_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn3_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn4_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn5_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_number', models.IntegerField(validators=[django.core.validators.MaxValueValidator(807), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_ability', models.IntegerField(validators=[django.core.validators.MaxValueValidator(293), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_held_item', models.IntegerField(validators=[django.core.validators.MaxValueValidator(1018), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_nature', models.IntegerField(validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_move1', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_move2', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_move3', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('pkmn6_move4', models.IntegerField(validators=[django.core.validators.MaxValueValidator(746), django.core.validators.MinValueValidator(1)])),
                ('points', models.ManyToManyField(related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='teambuilder.Team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
